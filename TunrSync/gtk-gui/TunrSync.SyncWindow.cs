
// This file has been generated by the GUI designer. Do not modify.
namespace TunrSync
{
	public partial class SyncWindow
	{
		private global::Gtk.VBox vbox1;
		
		private global::Gtk.HBox hbox2;
		
		private global::Gtk.VBox vbox4;
		
		private global::Gtk.Fixed fixed3;
		
		private global::Gtk.Label label4;
		
		private global::Gtk.Label label5;
		
		private global::Gtk.HSeparator hseparator1;
		
		private global::Gtk.HBox hbox3;
		
		private global::Gtk.Entry EntryDirectory;
		
		private global::Gtk.Button BtnChangeDirectory;
		
		private global::Gtk.ComboBox ComboSyncMode;
		
		private global::Gtk.Button ButtonLogOut;
		
		private global::Gtk.VSeparator vseparator1;
		
		private global::Gtk.Frame frame1;
		
		private global::Gtk.Alignment GtkAlignment;
		
		private global::Gtk.ScrolledWindow scrolledwindow2;
		
		private global::Gtk.TextView TextSyncMessages;
		
		private global::Gtk.Label GtkLabel1;
		
		private global::Gtk.HBox hbox1;
		
		private global::Gtk.ProgressBar ProgressSync;
		
		private global::Gtk.Button ButtonSync;

		protected virtual void Build ()
		{
			global::Stetic.Gui.Initialize (this);
			// Widget TunrSync.SyncWindow
			this.WidthRequest = 640;
			this.HeightRequest = 320;
			this.Name = "TunrSync.SyncWindow";
			this.Title = global::Mono.Unix.Catalog.GetString ("Tunr Sync Agent");
			this.WindowPosition = ((global::Gtk.WindowPosition)(4));
			this.BorderWidth = ((uint)(8));
			this.Resizable = false;
			this.AllowGrow = false;
			// Container child TunrSync.SyncWindow.Gtk.Container+ContainerChild
			this.vbox1 = new global::Gtk.VBox ();
			this.vbox1.Name = "vbox1";
			this.vbox1.Spacing = 6;
			// Container child vbox1.Gtk.Box+BoxChild
			this.hbox2 = new global::Gtk.HBox ();
			this.hbox2.Name = "hbox2";
			this.hbox2.Spacing = 6;
			// Container child hbox2.Gtk.Box+BoxChild
			this.vbox4 = new global::Gtk.VBox ();
			this.vbox4.Name = "vbox4";
			this.vbox4.Spacing = 6;
			// Container child vbox4.Gtk.Box+BoxChild
			this.fixed3 = new global::Gtk.Fixed ();
			this.fixed3.WidthRequest = 200;
			this.fixed3.Name = "fixed3";
			this.fixed3.HasWindow = false;
			this.vbox4.Add (this.fixed3);
			global::Gtk.Box.BoxChild w1 = ((global::Gtk.Box.BoxChild)(this.vbox4 [this.fixed3]));
			w1.Position = 0;
			w1.Expand = false;
			w1.Fill = false;
			// Container child vbox4.Gtk.Box+BoxChild
			this.label4 = new global::Gtk.Label ();
			this.label4.Name = "label4";
			this.label4.Xalign = 0F;
			this.label4.LabelProp = global::Mono.Unix.Catalog.GetString ("<span size=\"x-large\" weight=\"bold\">Test User</span>");
			this.label4.UseMarkup = true;
			this.vbox4.Add (this.label4);
			global::Gtk.Box.BoxChild w2 = ((global::Gtk.Box.BoxChild)(this.vbox4 [this.label4]));
			w2.Position = 1;
			w2.Expand = false;
			w2.Fill = false;
			// Container child vbox4.Gtk.Box+BoxChild
			this.label5 = new global::Gtk.Label ();
			this.label5.Name = "label5";
			this.label5.Xalign = 0F;
			this.label5.LabelProp = global::Mono.Unix.Catalog.GetString ("testuser@tunr.io");
			this.vbox4.Add (this.label5);
			global::Gtk.Box.BoxChild w3 = ((global::Gtk.Box.BoxChild)(this.vbox4 [this.label5]));
			w3.Position = 2;
			w3.Expand = false;
			w3.Fill = false;
			// Container child vbox4.Gtk.Box+BoxChild
			this.hseparator1 = new global::Gtk.HSeparator ();
			this.hseparator1.Name = "hseparator1";
			this.vbox4.Add (this.hseparator1);
			global::Gtk.Box.BoxChild w4 = ((global::Gtk.Box.BoxChild)(this.vbox4 [this.hseparator1]));
			w4.Position = 3;
			w4.Expand = false;
			w4.Fill = false;
			// Container child vbox4.Gtk.Box+BoxChild
			this.hbox3 = new global::Gtk.HBox ();
			this.hbox3.Name = "hbox3";
			this.hbox3.Spacing = 6;
			// Container child hbox3.Gtk.Box+BoxChild
			this.EntryDirectory = new global::Gtk.Entry ();
			this.EntryDirectory.CanFocus = true;
			this.EntryDirectory.Name = "EntryDirectory";
			this.EntryDirectory.Text = global::Mono.Unix.Catalog.GetString ("C:\\Hayden\\Music");
			this.EntryDirectory.IsEditable = true;
			this.EntryDirectory.InvisibleChar = '‚óè';
			this.hbox3.Add (this.EntryDirectory);
			global::Gtk.Box.BoxChild w5 = ((global::Gtk.Box.BoxChild)(this.hbox3 [this.EntryDirectory]));
			w5.Position = 0;
			// Container child hbox3.Gtk.Box+BoxChild
			this.BtnChangeDirectory = new global::Gtk.Button ();
			this.BtnChangeDirectory.CanFocus = true;
			this.BtnChangeDirectory.Name = "BtnChangeDirectory";
			this.BtnChangeDirectory.UseUnderline = true;
			this.BtnChangeDirectory.Label = global::Mono.Unix.Catalog.GetString ("Change...");
			this.hbox3.Add (this.BtnChangeDirectory);
			global::Gtk.Box.BoxChild w6 = ((global::Gtk.Box.BoxChild)(this.hbox3 [this.BtnChangeDirectory]));
			w6.Position = 2;
			w6.Expand = false;
			w6.Fill = false;
			this.vbox4.Add (this.hbox3);
			global::Gtk.Box.BoxChild w7 = ((global::Gtk.Box.BoxChild)(this.vbox4 [this.hbox3]));
			w7.Position = 4;
			w7.Expand = false;
			w7.Fill = false;
			// Container child vbox4.Gtk.Box+BoxChild
			this.ComboSyncMode = global::Gtk.ComboBox.NewText ();
			this.ComboSyncMode.AppendText (global::Mono.Unix.Catalog.GetString ("Upload Only"));
			this.ComboSyncMode.AppendText (global::Mono.Unix.Catalog.GetString ("Download Only"));
			this.ComboSyncMode.AppendText (global::Mono.Unix.Catalog.GetString ("Upload + Download"));
			this.ComboSyncMode.Name = "ComboSyncMode";
			this.ComboSyncMode.Active = 0;
			this.vbox4.Add (this.ComboSyncMode);
			global::Gtk.Box.BoxChild w8 = ((global::Gtk.Box.BoxChild)(this.vbox4 [this.ComboSyncMode]));
			w8.Position = 5;
			w8.Expand = false;
			w8.Fill = false;
			// Container child vbox4.Gtk.Box+BoxChild
			this.ButtonLogOut = new global::Gtk.Button ();
			this.ButtonLogOut.CanFocus = true;
			this.ButtonLogOut.Name = "ButtonLogOut";
			this.ButtonLogOut.UseUnderline = true;
			this.ButtonLogOut.Label = global::Mono.Unix.Catalog.GetString ("Log Out");
			this.vbox4.Add (this.ButtonLogOut);
			global::Gtk.Box.BoxChild w9 = ((global::Gtk.Box.BoxChild)(this.vbox4 [this.ButtonLogOut]));
			w9.PackType = ((global::Gtk.PackType)(1));
			w9.Position = 6;
			w9.Expand = false;
			w9.Fill = false;
			this.hbox2.Add (this.vbox4);
			global::Gtk.Box.BoxChild w10 = ((global::Gtk.Box.BoxChild)(this.hbox2 [this.vbox4]));
			w10.Position = 0;
			w10.Expand = false;
			w10.Fill = false;
			// Container child hbox2.Gtk.Box+BoxChild
			this.vseparator1 = new global::Gtk.VSeparator ();
			this.vseparator1.Name = "vseparator1";
			this.hbox2.Add (this.vseparator1);
			global::Gtk.Box.BoxChild w11 = ((global::Gtk.Box.BoxChild)(this.hbox2 [this.vseparator1]));
			w11.Position = 2;
			w11.Expand = false;
			w11.Fill = false;
			// Container child hbox2.Gtk.Box+BoxChild
			this.frame1 = new global::Gtk.Frame ();
			this.frame1.Name = "frame1";
			this.frame1.ShadowType = ((global::Gtk.ShadowType)(0));
			// Container child frame1.Gtk.Container+ContainerChild
			this.GtkAlignment = new global::Gtk.Alignment (0F, 0F, 1F, 1F);
			this.GtkAlignment.Name = "GtkAlignment";
			this.GtkAlignment.LeftPadding = ((uint)(12));
			// Container child GtkAlignment.Gtk.Container+ContainerChild
			this.scrolledwindow2 = new global::Gtk.ScrolledWindow ();
			this.scrolledwindow2.CanFocus = true;
			this.scrolledwindow2.Name = "scrolledwindow2";
			this.scrolledwindow2.HscrollbarPolicy = ((global::Gtk.PolicyType)(2));
			this.scrolledwindow2.ShadowType = ((global::Gtk.ShadowType)(1));
			// Container child scrolledwindow2.Gtk.Container+ContainerChild
			this.TextSyncMessages = new global::Gtk.TextView ();
			this.TextSyncMessages.Buffer.Text = "Hello this is a test\nHello this is a test\nHello this is a test\nHello this is a te" +
			"st\nHello this is a test\nHello this is a test\nHello this is a test";
			this.TextSyncMessages.CanFocus = true;
			this.TextSyncMessages.Name = "TextSyncMessages";
			this.scrolledwindow2.Add (this.TextSyncMessages);
			this.GtkAlignment.Add (this.scrolledwindow2);
			this.frame1.Add (this.GtkAlignment);
			this.GtkLabel1 = new global::Gtk.Label ();
			this.GtkLabel1.Name = "GtkLabel1";
			this.GtkLabel1.Ypad = 2;
			this.GtkLabel1.LabelProp = global::Mono.Unix.Catalog.GetString ("<b>Sync Messages</b>");
			this.GtkLabel1.UseMarkup = true;
			this.frame1.LabelWidget = this.GtkLabel1;
			this.hbox2.Add (this.frame1);
			global::Gtk.Box.BoxChild w15 = ((global::Gtk.Box.BoxChild)(this.hbox2 [this.frame1]));
			w15.Position = 3;
			this.vbox1.Add (this.hbox2);
			global::Gtk.Box.BoxChild w16 = ((global::Gtk.Box.BoxChild)(this.vbox1 [this.hbox2]));
			w16.Position = 0;
			// Container child vbox1.Gtk.Box+BoxChild
			this.hbox1 = new global::Gtk.HBox ();
			this.hbox1.Name = "hbox1";
			this.hbox1.Spacing = 4;
			// Container child hbox1.Gtk.Box+BoxChild
			this.ProgressSync = new global::Gtk.ProgressBar ();
			this.ProgressSync.Name = "ProgressSync";
			this.ProgressSync.Fraction = 0.5D;
			this.hbox1.Add (this.ProgressSync);
			global::Gtk.Box.BoxChild w17 = ((global::Gtk.Box.BoxChild)(this.hbox1 [this.ProgressSync]));
			w17.Position = 0;
			// Container child hbox1.Gtk.Box+BoxChild
			this.ButtonSync = new global::Gtk.Button ();
			this.ButtonSync.WidthRequest = 100;
			this.ButtonSync.HeightRequest = 32;
			this.ButtonSync.CanFocus = true;
			this.ButtonSync.Name = "ButtonSync";
			this.ButtonSync.UseUnderline = true;
			this.ButtonSync.Label = global::Mono.Unix.Catalog.GetString ("Sync Now");
			this.hbox1.Add (this.ButtonSync);
			global::Gtk.Box.BoxChild w18 = ((global::Gtk.Box.BoxChild)(this.hbox1 [this.ButtonSync]));
			w18.Position = 1;
			w18.Expand = false;
			this.vbox1.Add (this.hbox1);
			global::Gtk.Box.BoxChild w19 = ((global::Gtk.Box.BoxChild)(this.vbox1 [this.hbox1]));
			w19.PackType = ((global::Gtk.PackType)(1));
			w19.Position = 2;
			w19.Expand = false;
			w19.Fill = false;
			this.Add (this.vbox1);
			if ((this.Child != null)) {
				this.Child.ShowAll ();
			}
			this.DefaultWidth = 640;
			this.DefaultHeight = 320;
			this.Show ();
			this.DeleteEvent += new global::Gtk.DeleteEventHandler (this.OnDeleteEvent);
		}
	}
}
